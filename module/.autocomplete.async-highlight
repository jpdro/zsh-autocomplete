#!/bin/zsh

.autocomplete.async-highlight.precmd() {
  emulate -L zsh -o extendedglob -o NO_shortloops -o warncreateglobal
  add-zsh-hook -d precmd .autocomplete.async-highlight.precmd

  typeset -gi _ZSH_HIGHLIGHT_PRIOR_CURSOR
  typeset -g _ZSH_HIGHLIGHT_PRIOR_BUFFER

  typeset -gHa _autocomplete__highlight=()
  typeset -gHi _autocomplete__async_highlight_fd _autocomplete__async_highlight_pid
  zle -N .autocomplete.async-highlight.update

  autoload -Uz add-zle-hook-widget
  add-zle-hook-widget -d line-pre-redraw .autocomplete.async-highlight.start
  add-zle-hook-widget line-pre-redraw .autocomplete.async-highlight.start

  add-zsh-hook -d preexec .autocomplete.async-highlight.stop
  add-zsh-hook preexec .autocomplete.async-highlight.stop
  add-zsh-hook -d zshexit .autocomplete.async-highlight.stop
  add-zsh-hook zshexit .autocomplete.async-highlight.stop

  return 0
}

.autocomplete.async-highlight.stop() {
  emulate -L zsh -o extendedglob -o NO_shortloops -o warncreateglobal

  .autocomplete.kill $_autocomplete__async_highlight_fd $_autocomplete__async_highlight_pid
  _autocomplete__async_timeout_fd=0
  _autocomplete__async_timeout_pid=0
}

.autocomplete.async-highlight.start() {
  setopt $_autocomplete__options

  [[ -v functions[_zsh_highlight] ]] || return 0

  _zsh_highlight_call_widget() {
    builtin zle $1 -w "$@[2,-1]"
  }

  .autocomplete.kill $_autocomplete__async_highlight_fd $_autocomplete__async_highlight_pid
  exec {_autocomplete__async_highlight_fd}< <(
    {
      local pid=$sysparams[pid]
      print -r $pid

      setopt NO_xtrace NO_verbose
      [[ -v functions[_zsh_autosuggest_disable] ]] && _zsh_autosuggest_disable

      _zsh_highlight
      print -r $pid$'\0'$CURSOR$'\0'${(q)BUFFER}$'\0'${(q)region_highlight[@]}$'\0'$'\0'
    } always {
      kill -TERM $pid
    }
  )
  read _autocomplete__async_highlight_pid <&$_autocomplete__async_highlight_fd
  zle -Fw "$_autocomplete__async_highlight_fd" .autocomplete.async-highlight.update
}

.autocomplete.async-highlight.update() {
  setopt $_autocomplete__options

  local -i pid cursor
  local buffer highlight eof
  {
    [[ -z $2 || $2 == hup ]] && IFS=$'\0' read -r -u "$1" pid cursor buffer highlight eof
  } always {
    .autocomplete.kill $1 $pid
  }

  if [[ $BUFFER == ${(Q)buffer} ]]; then
    _ZSH_HIGHLIGHT_PRIOR_BUFFER="$buffer"
    _ZSH_HIGHLIGHT_PRIOR_CURSOR=$cursor
    _autocomplete__highlight=( ${${(@Q)${(z)highlight}}[@]:#'-1 -1 none'} )
  else
    _ZSH_HIGHLIGHT_PRIOR_BUFFER=''
    _ZSH_HIGHLIGHT_PRIOR_CURSOR=0
    _autocomplete__highlight=( "0 $#BUFFER fg=default" )
  fi
  .autocomplete.highlight
}

emulate -L zsh -o extendedglob -o NO_shortloops -o warncreateglobal

zmodload zsh/system zsh/zpty
autoload -Uz add-zsh-hook add-zle-hook-widget .autocomplete.kill

add-zsh-hook precmd .autocomplete.async-highlight.precmd
