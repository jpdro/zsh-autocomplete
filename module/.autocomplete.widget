#!/bin/zsh

.autocomplete.widget.precmd() {
  emulate -L zsh -o extendedglob -o NO_shortloops -o warncreateglobal
  add-zsh-hook -d precmd .autocomplete.widget.precmd

  local tab_style
  zstyle -s ":autocomplete:tab:" widget-style tab_style || tab_style='complete-word'
  zstyle ":autocomplete:tab:*" widget-style $tab_style
  _autocomplete.widget.new menu-complete _menu_complete $tab_style

  local backtab_style=$tab_style
  [[ $tab_style == menu-complete ]] && backtab_style=reverse-menu-complete
  _autocomplete.widget.new menu-complete _reverse_menu_complete $backtab_style

  .autocomplete.widget.new menu-complete menu-complete
  .autocomplete.widget.new menu-complete reverse-menu-complete

  _autocomplete.widget.new list-expand list-expand menu-select

  _autocomplete.widget.new history-search _history_search menu-select
  .autocomplete.widget.new history-search history-search-backward
  .autocomplete.widget.new history-search history-search-forward
  .autocomplete.widget.new history-search history-incremental-search-backward
  .autocomplete.widget.new history-search history-incremental-search-forward

  .autocomplete.widget.new line-or-search up-line-or-search
  .autocomplete.widget.new line-or-search down-line-or-search

  .autocomplete.widget.new line-or-select down-line-or-select
  .autocomplete.widget.new line-or-select up-line-or-select

  [[ -v functions[_zsh_autosuggest_bind_widgets] ]] &&
    _zsh_autosuggest_bind_widgets
}

_autocomplete.widget.new() {
  zle -C $2 $3 _autocomplete.$1
}

.autocomplete.widget.new() {
  local func=.autocomplete.$1
  autoload -Uz $func
  zle -N $2 $func
}

emulate -L zsh -o extendedglob -o NO_shortloops -o warncreateglobal
autoload -Uz .autocomplete.highlight

add-zsh-hook precmd .autocomplete.widget.precmd
